!function(e){var n=Math.min,s=Math.max,t=function(e,n,s){for(var t=s.length,o=0;o<t;++o)e.setUint8(n+o,s.charCodeAt(o))},o=function(e,n){this.sampleRate=e,this.numChannels=n,this.numSamples=0,this.dataViews=[]};o.prototype.encode=function(e){for(var t=e[0].length,o=this.numChannels,a=new DataView(new ArrayBuffer(t*o*2)),r=0,i=0;i<t;++i)for(var f=0;f<o;++f){var c=32767*e[f][i];a.setInt16(r,c<0?s(c,-32768):n(c,32767),!0),r+=2}this.dataViews.push(a),this.numSamples+=t},o.prototype.finish=function(e){var n=this.numChannels*this.numSamples*2,s=new DataView(new ArrayBuffer(44));t(s,0,"RIFF"),s.setUint32(4,36+n,!0),t(s,8,"WAVE"),t(s,12,"fmt "),s.setUint32(16,16,!0),s.setUint16(20,1,!0),s.setUint16(22,this.numChannels,!0),s.setUint32(24,this.sampleRate,!0),s.setUint32(28,4*this.sampleRate,!0),s.setUint16(32,2*this.numChannels,!0),s.setUint16(34,16,!0),t(s,36,"data"),s.setUint32(40,n,!0),this.dataViews.unshift(s);var o=new Blob(this.dataViews,{type:"audio/wav"});return this.cleanup(),o},o.prototype.cancel=o.prototype.cleanup=function(){delete this.dataViews},e.WavAudioEncoder=o}(self);var sampleRate=44100,numChannels=2,options=void 0,maxBuffers=void 0,encoder=void 0,recBuffers=void 0,bufferCount=0;function error(e){self.postMessage({command:"error",message:"wav: "+e})}function init(e){sampleRate=e.config.sampleRate,numChannels=e.config.numChannels,options=e.options}function setOptions(e){encoder||recBuffers?error("cannot set options during recording"):options=e}function start(e){maxBuffers=Math.ceil(options.timeLimit*sampleRate/e),options.encodeAfterRecord?recBuffers=[]:encoder=new WavAudioEncoder(sampleRate,numChannels)}function record(e){bufferCount++<maxBuffers?encoder?encoder.encode(e):recBuffers.push(e):self.postMessage({command:"timeout"})}function postProgress(e){self.postMessage({command:"progress",progress:e})}function finish(){if(recBuffers){postProgress(0),encoder=new WavAudioEncoder(sampleRate,numChannels);for(var e=Date.now()+options.progressInterval;recBuffers.length>0;){encoder.encode(recBuffers.shift());var n=Date.now();n>e&&(postProgress((bufferCount-recBuffers.length)/bufferCount),e=n+options.progressInterval)}postProgress(1)}self.postMessage({command:"complete",blob:encoder.finish(options.wav.mimeType)}),cleanup()}function cleanup(){encoder=recBuffers=void 0,bufferCount=0}self.onmessage=function(e){var n=e.data;switch(n.command){case"init":init(n);break;case"options":setOptions(n.options);break;case"start":start(n.bufferSize);break;case"record":record(n.buffer);break;case"finish":finish();break;case"cancel":cleanup()}},self.postMessage({command:"loaded"});